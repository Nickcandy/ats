pipeline {
    agent {
        label "${devDockerIntegreationHost}"
    }
    stages {
        stage('Kill Last Build'){
            steps{
                script{
                    env.GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                    Jenkins  j = Jenkins.instance
                    Job job = j.getItemByFullName(JOB_NAME)
                    def lastJobNumber =  job.getLastBuild().number - 1
                    Run lastBuild =  job.getBuildByNumber(lastJobNumber);
                    lastBuild.doKill()
                }
            }
        }
        stage('Sonar Analysis'){
            agent{
                docker {
                    image 'shc-itsmax-harbor.hpeswlab.net/itsmax-bo/master/maven:3-jdk-8-alpine'
                    args '-v $home/.m2:/root/.m2'
                }
            }
            steps{
                script{
                    withSonarQubeEnv('sonar') {
                        sh 'mvn  -s /settings.xml clean package  org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
                    }
                }
            }
        }
    }
}
